# Gumby experiment with the anonymous download integrated with the MultiChain.
# This experiment starts a anonymous seed and download over two hops with 1 circuit.
# The download is transcribed with MultiChain.
# After the experiment has run, the data is processed in two steps.
# The post_process_integrated.sh script first starts post_process_integrated.py, which reads the databases and writes
# the blocks to a plain text file
# Then r/generate_multichain_graph.r is started, which produces .svg plots of the multichain

experiment_name = MultiChain_integrated
# Directory where to store the output files generated by your experiment and the helper scripts.
workspace_dir = output

tracker_cmd = 'run_tracker.sh'
# tracker_run_remote =
tracker_port = 7788

experiment_server_cmd = 'experiment_server.py'
# Command used to start (the local part of) the experiment. This will be executed concurrently with its remote counterpart if set (see below)
local_instance_cmd = "process_guard.py -c multichain_integrated_client.py  -c multichain_integrated_client.py -c multichain_integrated_client.py  -c multichain_integrated_client.py -c multichain_integrated_client.py -c multichain_integrated_client.py -c multichain_integrated_client.py -c multichain_integrated_client.py  -c multichain_integrated_client.py -c multichain_integrated_client.py  -c multichain_integrated_client.py  -c multichain_integrated_client.py -c multichain_integrated_client.py  -c multichain_integrated_client.py -c multichain_integrated_client.py  -c multichain_integrated_client.py  -c multichain_integrated_client.py -c multichain_integrated_client.py  -c multichain_integrated_client.py -c multichain_integrated_client.py -c multichain_integrated_client.py"
# Use a virtualenv locally? (see http://www.virtualenv.org/en/latest/virtualenv.html if you don't know what this is)
# Defaults to true
use_local_venv = False

# Process guard timeout in seconds, set to 0 to disable (default: 30)
experiment_time = 900
# Port where we should listen on. (required)
sync_port = __unique_port__
# Override the experiment synchronization server host to which the sync clients will try to connect to (default is HEAD_HOST)
sync_host = 127.0.0.1
#
# Number of sync clients we should wait for to be registered before starting the experiment. (default is DAS4_INSTANCES_TO_RUN)
sync_subscribers_amount = 21
# Output dir for local running experiments (so not on DAS4).
local_output_dir ="output"

# Dir where to write all the output generated from the experiment (default is workspace_dir/output)
 output_dir = "output/multichain"

# Run a script to process the results
post_process_cmd = 'post_process_integrated.sh'

# Run R scripts to generate a graph
r_scripts_to_run = "generate_multichain_graph.r"
